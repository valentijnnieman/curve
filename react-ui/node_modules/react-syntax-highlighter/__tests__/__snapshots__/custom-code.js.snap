exports[`test SyntaxHighlighter component renders custom react component where code tag is by default 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em"
    }
  }>
  <section
    style={undefined}>
    <span
      className={undefined}
      style={
        Object {
          "fontWeight": "bold"
        }
      }>
      const
    </span>
     woah = 
    <span
      className={undefined}
      style={Object {}}>
      <span
        className={undefined}
        style={Object {}}>
        fun
      </span>
       =>
    </span>
     fun + 
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      1
    </span>
    ;
    
    <span
      className={undefined}
      style={
        Object {
          "fontWeight": "bold"
        }
      }>
      const
    </span>
     dude = woah(
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      2
    </span>
    ) + 
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      3
    </span>
    ;
    
    <span
      className={undefined}
      style={Object {}}>
      <span
        className={undefined}
        style={
          Object {
            "fontWeight": "bold"
          }
        }>
        function
      </span>
       
      <span
        className={undefined}
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold"
          }
        }>
        thisIsAFunction
      </span>
      (
      <span
        className={undefined}
        style={Object {}} />
      ) 
    </span>
    {
      
    <span
      className={undefined}
      style={
        Object {
          "fontWeight": "bold"
        }
      }>
      return
    </span>
     [
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      1
    </span>
    ,
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      2
    </span>
    ,
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      3
    </span>
    ].map(
    <span
      className={undefined}
      style={Object {}}>
      <span
        className={undefined}
        style={Object {}}>
        n
      </span>
       =>
    </span>
     n + 
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      1
    </span>
    ).filter(n !== 
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      3
    </span>
    );
    }
    
    <span
      className={undefined}
      style={
        Object {
          "color": "#397300"
        }
      }>
      console
    </span>
    .log(
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      \'making up fake code is really hard\'
    </span>
    );
    
    
    <span
      className={undefined}
      style={Object {}}>
      <span
        className={undefined}
        style={
          Object {
            "fontWeight": "bold"
          }
        }>
        function
      </span>
       
      <span
        className={undefined}
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold"
          }
        }>
        itIs
      </span>
      (
      <span
        className={undefined}
        style={Object {}} />
      ) 
    </span>
    {
      
    <span
      className={undefined}
      style={
        Object {
          "fontWeight": "bold"
        }
      }>
      return
    </span>
     
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      \'no seriously really it is\'
    </span>
    ;
    }
    
  </section>
</pre>
`;

exports[`test SyntaxHighlighter renders div where code tag is by default 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em"
    }
  }>
  <div
    style={undefined}>
    <span
      className={undefined}
      style={
        Object {
          "fontWeight": "bold"
        }
      }>
      const
    </span>
     woah = 
    <span
      className={undefined}
      style={Object {}}>
      <span
        className={undefined}
        style={Object {}}>
        fun
      </span>
       =>
    </span>
     fun + 
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      1
    </span>
    ;
    
    <span
      className={undefined}
      style={
        Object {
          "fontWeight": "bold"
        }
      }>
      const
    </span>
     dude = woah(
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      2
    </span>
    ) + 
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      3
    </span>
    ;
    
    <span
      className={undefined}
      style={Object {}}>
      <span
        className={undefined}
        style={
          Object {
            "fontWeight": "bold"
          }
        }>
        function
      </span>
       
      <span
        className={undefined}
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold"
          }
        }>
        thisIsAFunction
      </span>
      (
      <span
        className={undefined}
        style={Object {}} />
      ) 
    </span>
    {
      
    <span
      className={undefined}
      style={
        Object {
          "fontWeight": "bold"
        }
      }>
      return
    </span>
     [
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      1
    </span>
    ,
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      2
    </span>
    ,
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      3
    </span>
    ].map(
    <span
      className={undefined}
      style={Object {}}>
      <span
        className={undefined}
        style={Object {}}>
        n
      </span>
       =>
    </span>
     n + 
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      1
    </span>
    ).filter(n !== 
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      3
    </span>
    );
    }
    
    <span
      className={undefined}
      style={
        Object {
          "color": "#397300"
        }
      }>
      console
    </span>
    .log(
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      \'making up fake code is really hard\'
    </span>
    );
    
    
    <span
      className={undefined}
      style={Object {}}>
      <span
        className={undefined}
        style={
          Object {
            "fontWeight": "bold"
          }
        }>
        function
      </span>
       
      <span
        className={undefined}
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold"
          }
        }>
        itIs
      </span>
      (
      <span
        className={undefined}
        style={Object {}} />
      ) 
    </span>
    {
      
    <span
      className={undefined}
      style={
        Object {
          "fontWeight": "bold"
        }
      }>
      return
    </span>
     
    <span
      className={undefined}
      style={
        Object {
          "color": "#880000"
        }
      }>
      \'no seriously really it is\'
    </span>
    ;
    }
    
  </div>
</pre>
`;
